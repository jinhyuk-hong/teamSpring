<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.library.mapper.search.BookMapper"> <!-- 인터페이스 참조 -->

	<!-- 도서 대출 -->
	<insert id="loan">
		insert into loan_history(user_id, user_email, book_title, book_author, book_isbn, 
		book_cover, book_pubDate, book_publisher, return_period)
		values
		(#{user_id}, #{user_email}, #{book_title}, #{book_author}, #{book_isbn}, #{book_cover}, 
		#{book_pubDate}, #{book_publisher}, adddate(current_timestamp, 14))
	</insert>
	
	<!-- 대출 중인 해당 도서 수 카운트 -->
	<select id="count" resultType="int">
		select count(*) from loan_history where book_isbn = #{book_isbn} and return_status = false
	</select>

	<!-- 대출 베스트 출력 -->
	<select id="book_rank" resultType="com.library.model.search.BookDTO">
		select count(*) as 'total_count', book_title, book_isbn, book_cover
					, book_pubDate, book_publisher, book_author
		 from loan_history 
		where loan_date between concat(#{year}, '-', #{month}, '-01') and concat(#{year}, '-', #{month}, '-31' )
			  and return_status = true 
		group by book_isbn 
		order by total_count desc 
		limit 10;
	</select>
	
	<!-- 대출자 상태 체크 -->
	<select id="statusCheck" resultType="int">
		select count(*)
		  from member 
		where user_id = #{user_id} and user_overdue_date = 0
		 and user_book_count &lt; (select user_able_loan from member where user_id = #{user_id})
	</select>
	
	<!-- 대출자 대출 중 도서 수 증가 -->
	<update id="increase_count">
		update member
		   set user_book_count = user_book_count + 1
		 where user_id = #{user_id};
	</update>
	
	<!-- 회원이 대출 중인 도서인지 체크 -->
	<select id="loan_check" resultType="int">
		select count(*)
		  from loan_history
		 where user_id = #{user_id} and book_isbn = #{book_isbn} and return_status = false 
	</select>
	
	<!-- 이미 찜한 도서인지 체크 -->
	<select id="like_check" resultType="int">
		select count(*)
		  from like_history
		 where user_id = #{user_id} and book_isbn = #{book_isbn} 
	</select>
	
	<!-- 찜하기 -->
	<insert id="like">
		insert into like_history(user_id, user_email, book_title, book_author, book_isbn, 
		book_cover, book_pubDate, book_publisher)
		values
		(#{user_id}, #{user_email}, #{book_title}, #{book_author}, #{book_isbn}, #{book_cover}, 
		#{book_pubDate}, #{book_publisher})
	</insert>
	<!-- 장바구니 -->
	<insert id="cart">
		insert into cart(user_id, user_email, book_title, book_author, book_isbn, 
		book_cover, book_pubDate, book_publisher, priceStandard ,bookCount)
		values
		( #{user_id}, #{user_email}, #{book_title}, #{book_author}, #{book_isbn}, #{book_cover}, 
		#{book_pubDate}, #{book_publisher}, #{priceStandard}, #{bookCount})
	</insert>
	
	<update id="modifyCount">
	
		update vam_cart set bookCount=#{bookCount} where cartId = #{cartId}
	
	</update>
	
	<delete id="deleteCart">
	
		delete from vam_cart where cartId = #{cartId}
	
	</delete>
	
	<select id="cart_check" resultType="int">
	select count(*)
		  from cart
		 where user_id = #{user_id} and book_isbn = #{book_isbn} 
	</select>
	
</mapper>  